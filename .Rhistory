#Calculate the standard deviation of the PEI values
stdPEI<-apply(ProbExposureStoreOnlyNum,1,sd)
#Median of individuals' PEI
medianPEI<-apply(ProbExposureStoreOnlyNum,1,median)
#Append the mean and standard deviation of each infant's PEI values to their carriage status
df_infants_PEI<-data.frame(df_infants,MeanPEI,stdPEI)
ProbExposureStoreOnlyNumReshape <- melt(ProbExposureStoreOnlyNum)  #the function melt reshapes it from wide to long
ProbExposureStoreOnlyNumReshape$rowid <- 1:1583
#Inspect the first 10 rows
head(ProbExposureStoreOnlyNumReshape, 10)
#Take a look at one individual's PEI values by plotting them with a histogram
PEI1<-ProbExposureStoreOnlyNumReshape %>% slice(1:10001)
ggplot(PEI1, aes(x=value)) + geom_histogram(binwidth=0.1)
# We can also use a boxplot
pPEI1 <- ggplot(PEI1%>%slice(1:1000), aes(x=variable,y=value)) +
geom_violin()
pPEI1  +
geom_boxplot(width=0.1, fill="orange") +
theme(
strip.background = element_blank(),
) + ylab("PEI value") + xlab("Individual A")+theme(  plot.title = element_text(hjust = 0.5), #axis.title.x=element_blank(Raccoon),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
strip.text = element_text(size=15),
text = element_text(size = 15)) +
scale_y_continuous(limits = c(0,1))+ theme(
# Hide panel borders and remove grid lines
panel.border = element_blank(),
# Remove panel grid lines
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
# Remove panel background
panel.background = element_blank(),
# Add axis line
axis.line = element_line(colour = "black")
)
jdat <- list("pneu_carr" = df_infants_PEI$infant_pneumo_status, "mu" = df_infants_PEI$MeanPEI, "sigma"= df_infants_PEI$stdPEI)
#Define model
jcode <- "model{
#Likelihood
#As we have assumed a beta distribution for PEI (exp.prop), we need to specify a[i] and b[i] appropriately
for (i in 1:length(pneu_carr)){
pneu_carr[i] ~ dbern(prob_carr[i])
a[i] <- ((1 - mu[i]) / sigma[i] ^ 2 - 1 / mu[i]) * mu[i] ^ 2
b[i] <- a[i] * (1 / mu[i] - 1)
#Now, exp.prop will take a beta distribution
exp.prop[i] ~ dbeta(a[i], b[i])
#And finally, specify the logistic regression equation for infant carriage
logit(prob_carr[i]) =  beta0 + beta1 * exp.prop[i]
}
#priors
beta0 ~ dnorm(0,1)
beta1 ~ dnorm(0,1)
}"
#Fit and draw posterior samples
mcmc.length=10000
jmod = jags.model(textConnection(jcode), data=jdat, n.chains=4, n.adapt=1000)
update(jmod)
jpos = coda.samples(jmod, c("beta0","beta1"), n.iter=mcmc.length)
age
#Change column names now (makes things easier to handle later)
#Define a list of varying "varname"
varname <- c( 'contact_serial_no','PEI')
#define how many times above "varname" repeat itself
n <- c(1, 10000)
#Replace column name
names(ProbExposureStore_df)[1:ncol(ProbExposureStore_df)] <- unlist(mapply(function(x,y) paste(x, seq(1,y), sep="_"), varname, n))
ProbExposureStore_df
ProbExposureStore_df %>% dim
ncol(ProbExposureStore_df)
unlist(mapply(function(x,y) paste(x, seq(1,y), sep="_"), varname, n))
varname
y
ProbExposureStore_df %>% head
#Append the mean and standard deviation of each infant's PEI values to their carriage status
df_infants_PEI<-data.frame(df_infants,MeanPEI,stdPEI)
MeanPEI
stdPEI
df_infants
MeanPEI
#Append the mean and standard deviation of each infant's PEI values to their carriage status
df_infants_PEI<-data.frame(df_infants,MeanPEI,stdPEI)
ggsave("Figures/Figure1.pdf", unit = "cm", width=15, height=9)
#################################
#This file reproduces Figure 1
#################################
#Obtain required packages
require(tidyverse)
#Load data
df_infants <- read.csv("df_infants_public.csv")
df_contacts <- read.csv("df_contacts_public.csv")
#Define age grouping
brks<-0:99
df_contacts$ctagegp <- cut(df_contacts$contact_age,brks, right=F)
#Sort contacts by age and contact time
df_contacts_grouped=df_contacts%>%group_by(ctagegp,contact_time) %>% summarise(N = length(contact_age))
#Make contact time continuous
contact_time_continuous<-as.numeric(df_contacts_grouped$contact_time)
ctagegp_continuous<-as.numeric(df_contacts_grouped$ctagegp)
#Plot using a histogram
ggplot(data=df_contacts_grouped, aes(x=ctagegp_continuous,y=N,fill=factor(contact_time) )) +
geom_bar(stat="identity")+
xlab("Contact Age (years)") + ylab("Number of Contacts") +
scale_fill_brewer(palette = "Accent", name = "Contact Time", labels = c("Short (<5 minutes)", "Medium (5-60 minutes)", "Long (>60 minutes)")) +  theme(legend.position = "none")+
theme_classic() +
theme(legend.position = c(0.8, 0.8))
ggsave("Figures/Figure1.pdf", unit = "cm", width=15, height=9)
#####################################
# This file contains the code required to obtain the results shown in the paper
# (the cubic p-spline fit to age and Bayesian logistic regression)
#
# Please address any questions to me (george): george.qian08@alumni.imperial.ac.uk
#
# G Qian, 2021 on behalf of the authors of:
# "Pneumococcal exposure routes for infants, a nested cross-sectional survey in Nha Trang, Vietnam"
######################################
set.seed(31415)
###################################
### Load libraries
###################################
#Import libraries
library(tidyverse)
library(rjags)
library(binom)
library(runjags)
library(mmcc)
library(splines)
library(reshape2)
library(ggplot2)
options(dplyr.summarise.inform = FALSE)
###################################
### Load data
###################################
# Load data from the contact study
df_contacts <-
read.csv("df_contacts_public.csv") %>%
mutate(ctagegp = cut(contact_age, 0:100, right = F))
# Load relevant data from the carriage study
df_infants <- read.csv("df_infants_public.csv")
# CarriageData here uses the data from Carla's Thesis.
#The following rates were calculated using Table 6.1 in Carla Talarico's thesis (page 179),
#available online: https://deepblue.lib.umich.edu/handle/2027.42/64706)
CarriageDataThesis3 <- read.csv("CarriageDataCarlaHalfYear.csv")
# Carriage prevalence observed in the trial
NTrang4thUnder2 <-
tibble (age = c(5, 7, 9, 11, 13, 15, 17, 19, 21, 23)/12,
carriageR = c(0.147, 0.183, 0.235, 0.278, 0.276, 0.352, 0.344, 0.355, 0.413, 0.420))
# some data wrangling to get individual level data into format needed by model
CarriageDataThesis3 <- CarriageDataThesis3 %>%
rename(CarriageStatus = CarriageStatusH,
AllAges = AllAgesH)
CarriageDataThesis3_ <- CarriageDataThesis3 %>%
count(AllAges, CarriageStatus) %>%
pivot_wider(names_from = CarriageStatus,
values_from = n,
values_fill = 0) %>%
mutate(N = `0` + `1`) %>%
mutate(y = `1`,
p = y / N) %>%
nest(data = c(y, N)) %>%
mutate(CI = map(data, ~ prop.test(.x$y, .x$N)$conf.int)) %>%
mutate(CI = map(CI, ~ data.frame(
value = .x, key = c("L", "U")
))) %>%
mutate(CI = map(CI, ~ pivot_wider(
.x, values_from  = value,
names_from = key
))) %>%
unnest(CI)
#######################################
### Figure 1 (contact age distribution)
#######################################
df_contacts %>%
group_by(contact_age,contact_time) %>%
summarise(N = length(contact_age)) %>%
ggplot(aes(x = contact_age,
y = N,
fill = factor(contact_time))) +
geom_bar(stat="identity")+
xlab("Contact Age (years)") + ylab("Number of Contacts") +
scale_fill_brewer(palette = "Accent",
name = "Contact Time",
labels = c("Short (<5 minutes)", "Medium (5-60 minutes)", "Long (>60 minutes)")) +
theme_classic() +
theme(legend.position = c(0.8, 0.8))
ggsave("Figures/Figure1.pdf", unit = "cm", width=15, height=9)
###################################
### First Jags Model (cubic spline)
###################################
bspline <-
function(x,
K,
bdeg = 3,
cyclic = FALSE,
xl = min(x),
xr = max(x)) {
x <- as.matrix(x, ncol = 1)
ndx <- K - bdeg
# p-spline algorithm, as outlined in Eilers and Marx (1996)
dx <- (xr - xl) / ndx
t <- xl + dx * (-bdeg:(ndx + bdeg))
T <- (0 * x + 1) %*% t
X <- x %*% (0 * t + 1)
P <- (X - T) / dx
B <- (T <= X) & (X < (T + dx))
r <- c(2:length(t), 1)
for (k in 1:bdeg) {
B <- (P * B + (k + 1 - P) * B[, r]) / k
}
B <- B[, 1:(ndx + bdeg)]
if (cyclic == 1) {
for (i in 1:bdeg) {
B[, i] <- B[, i] + B[, K - bdeg + i]
}
B <- B[, 1:(K - bdeg)]
}
return(B)
}
K = 6
knots <- c(0, 3, 6, 9, 12, 18, 24)
X <- bs(
x = unlist(CarriageDataThesis3_$AllAges),
knots = knots,
intercept = FALSE
)
x.pred <- seq(0, 99, length.out = 100)
X.pred <- bs(x = x.pred,
knots = knots,
intercept = FALSE)
makeQ = function(degree, K, epsilon = 1e-3) {
x <- diag(K)
E <- diff(x, differences = degree)
return(t(E) %*% E + x * epsilon)
}
Q <- makeQ(2, nrow(X))
attributes(X) <- attributes(X)["dim"]
attributes(X.pred) <- attributes(X.pred)["dim"]
#Prepare
dat <- CarriageDataThesis3_ %>%
unnest(data) %>%
select(y, N) %>% as.list %>%
append(.,
values = list(
K = ncol(X),
Q = Q,
X.pred = X.pred,
X      = X,
n = nrow(X),
m = nrow(X.pred),
beta.0 = matrix(data = rep(0, ncol(X)),
ncol = 1)
))
#Implement RJags to find the cubic spline fit
mod <-
jags.model(file = "spline_model.R",
data = dat,
n.adapt = 5e3)
number_iter = 1000
burn <- jags.samples(mod, variable.names = "p.rep", n.iter = number_iter)
pred <- coda.samples(mod, "p.rep", n.iter = number_iter)
post <- coda.samples(mod, c("beta", "beta.00"), n.iter = number_iter)
# Model diagnostics
statsBeta <- tidy(post)
# Now we can plot the spline
Figure2a <- tidy(pred) %>%
bind_cols(data.frame(x = x.pred)) %>%
ggplot(data = ., aes(x = x, y = mean)) +
geom_ribbon(aes(ymin = `2.5%`,
ymax = `97.5%`),
alpha = 0.5,
fill = "lightskyblue") +
geom_line() +
geom_point(data = CarriageDataThesis3_,
aes(x = AllAges, y = p),
color = "red",
size = 3) + geom_linerange(data = CarriageDataThesis3_, aes(
x = AllAges,
ymin = L,
ymax = U,
y = p
)) +
xlab("Age") +
theme_classic() +
ylab("Prevalence") +
scale_x_continuous(trans = "sqrt", #we will use a square root scale on the x-axis to make the lower ages more prominent
breaks = c(1:10) ^ 2) +
geom_point(data = data.frame(x = knots, mean = 0), color = "grey") + xlab("Age") +
geom_point(data = NTrang4thUnder2,
aes(age, carriageR),
colour = "darkgreen",
size = 3) + scale_fill_discrete(breaks = c("trt1", "ctrl", "trt2")) + labs(y = "Carriage Prevalence", x = "Age (years)")
Figure2a
#####################
### Define Data Block
#####################
#Now take the output of this spline and use them to calculate PEI.
#These will be inputs to the second JAGS model
#For each set of beta parameters in 'post':
#  Calculate the carriage prevalence at all 101 ages (i.e. 0-100) from the cubic spline
#  Calculate PEI
#  Use as input into the PEI Jags
pred_prevalence <-
pred %>%
mcmc_to_dt() %>%
pivot_wider(names_from = iteration, values_from = value, names_prefix = "post ") %>%
mutate(ctagegp = cut(0:99,breaks = 0:100, right=F), .before="post 1") %>%
select(-c(chain,parameter))
PEI <-
df_contacts %>%
tibble() %>%
select(-c(X, contact_serial_no, contact_age)) %>%
left_join(pred_prevalence, by = "ctagegp") %>%
pivot_longer(cols = starts_with("post"), names_to = "posterior") %>%
group_by(infant_serial_no, posterior) %>% summarise(PEI = 1 - prod(1-value))
Figure2b <-
PEI %>%
left_join(df_infants[,c("infant_serial_no","infant_pneumo_status")], by = "infant_serial_no") %>%
filter(!is.na(infant_pneumo_status)) %>%
ggplot(aes(x = as.factor(infant_pneumo_status), y = PEI)) +
geom_violin(fill="lightblue") +
geom_boxplot(width=.07, fill="orange") +
ylab("PEI value") + xlab("") +
scale_y_continuous(labels = scales::percent) +
scale_x_discrete(labels=c("0" = "non-carriers", "1" = "carriers")) +
theme_classic()
Figure2 <-
Figure2a +
annotation_custom(ggplotGrob(Figure2b),
xmin = 3.1,
xmax = 10,
ymin = .38,
ymax = .85)
ggsave("Figures/Figure2.pdf", unit = "cm", width=20, height=12)
###########################################################################
### Second Jags Model (Logistic Regression: Y -> Pneumo Carriage, X -> PEI)
###########################################################################
# Read data in preparation for Rjags -> collect these in a list called 'jdat'
PEI_av <-
PEI %>%
group_by(infant_serial_no) %>% summarise(m = mean(PEI, na.rm = T),
s = sd(PEI, na.rm = T)) %>%
left_join(df_infants, by = "infant_serial_no") %>%
filter(m>0) %>%
mutate(commune_id = as.factor(commune_id))
jdat <-
list(
"pneu_carr" = PEI_av$infant_pneumo_status,
"mu" = PEI_av$m,
"sigma" = PEI_av$s,
"age"= PEI_av$infant_age_months,
"commune" = PEI_av$commune_id
)
#Define model
jcode <- "model{
#Define Likelihood
#As we have assumed a beta distribution for PEI (exp.prop), we need to specify a[i] and b[i] appropriately
for (i in 1:length(pneu_carr)){
pneu_carr[i] ~ dbern(prob_carr[i])
a[i] <- ((1 - mu[i]) / sigma[i] ^ 2 - 1 / mu[i]) * mu[i] ^ 2
b[i] <- a[i] * (1 / mu[i] - 1)
#Now, exp.prop will take a beta distribution
exp.prop[i] ~ dbeta(a[i], b[i])
#And finally, specify the logistic regression equation for infant carriage
logit(prob_carr[i]) =  beta0 + beta1 * exp.prop[i] + beta2[commune[i]] + beta3 * age[i]
}
#Define our priors
beta0 ~ dnorm(0,1)
beta1 ~ dnorm(0,1)
#There are 27 communes that we include in the contact study and so...
for(i in 1:27) {
beta2[i] ~  dnorm(beta2_mu, beta2_sigma)
}
#If we include beta0, then beta2_mu by definition should be 0 or we get identifiability issues
beta2_mu <- 0
#We assume the standard deviation follows a gamma distribution
beta2_sigma ~ dgamma(1,1)
#Prior for beta3 (coefficient of infant age)
beta3 ~ dnorm(0,1)
}"
#Fit and draw posterior samples
mcmc.length = 10000
jmod = jags.model(
textConnection(jcode),
data = jdat,
n.chains = 4,
n.adapt = 1000
)
update(jmod)
jpos = coda.samples(jmod,  c("beta0","beta1","beta2","beta3"), n.iter = mcmc.length)
# show regression coefficients
tidy(jpos)
###########################################################################
### Figure 3
###########################################################################
# Calculate exposure across all age groups
# Exposure from any one age group is defined as:
# sum(number of contacts in age group*P(carriage|age))
exposure <-
df_contacts %>%
tibble() %>%
select(-c(X, contact_serial_no)) %>%
left_join(pred_prevalence, by = "ctagegp") %>%
pivot_longer(cols = starts_with("post"), names_to = "posterior") %>%
mutate(ctagegp = cut(contact_age, breaks = c(seq(0,65, by=5),100), right=F)) %>%
group_by(ctagegp, posterior) %>% summarise(exp = sum(value)) %>%
filter(!is.na(ctagegp)) %>%  #Now obtain all posterior estimates to find confidence intervals
group_by(posterior) %>% mutate(exp_prop = exp / sum(exp)) %>%
group_by(ctagegp) %>% summarise(med = median(exp_prop),
lo = quantile(exp_prop, 0.025),
hi = quantile(exp_prop, 0.975))
s = seq(0,60, by=5)
ages = c(paste0(s,"-",s+4),"Over 60")
# Plot Figure 3a (proportion of exposure due to every age group)
Figure3a <-
exposure %>%
ggplot(aes(x = ctagegp, y = med, ymin = lo, ymax = hi)) +
geom_bar(stat = "identity", fill = "lightblue") +
geom_linerange(color = "Orange", lwd=1.2) +
ylab("Proportion of exposure") + xlab("Age Group") +
scale_x_discrete(labels = ages) +
theme_classic()
# Hone in on the proportion of exposure due to 0-15 year olds alone
# (with each year group in a separate bin)
exposure_fine <-
df_contacts %>%
tibble() %>%
select(-c(X, contact_serial_no)) %>%
left_join(pred_prevalence, by = "ctagegp") %>%
pivot_longer(cols = starts_with("post"), names_to = "posterior") %>%
group_by(contact_age, posterior) %>% summarise(exp = sum(value)) %>%
filter(!is.na(exp)) %>%
group_by(posterior) %>% mutate(exp_prop = exp / sum(exp)) %>%
group_by(contact_age) %>% summarise(med = median(exp_prop),
lo = quantile(exp_prop, 0.025),
hi = quantile(exp_prop, 0.975))
# Plot Figure 3b (showing the proportion of exposure due to 0-15 year olds)
Figure3b <-
exposure_fine %>%
filter(contact_age <=15) %>%
ggplot(aes(x = contact_age, y = med, ymin = lo, ymax = hi)) +
geom_bar(stat = "identity", fill = "lightblue") +
geom_linerange(color = "Orange", lwd=1.2) +
ylab("Proportion of\nexposure") + xlab("Age (years)") +
scale_x_continuous(breaks = 0:15) +
theme_classic()
Figure3 <-
Figure3a +
annotation_custom(ggplotGrob(Figure3b),
xmin = 4,
xmax = 14,
ymin = .17,
ymax = .5)
ggsave("Figures/Figure3.pdf", unit = "cm", width=20, height=12)
Figure3
ages
exposure <-
df_contacts %>%
tibble() %>%
select(-c(X, contact_serial_no)) %>%
left_join(pred_prevalence, by = "ctagegp") %>%
pivot_longer(cols = starts_with("post"), names_to = "posterior") %>%
mutate(ctagegp = cut(contact_age, breaks = c(seq(0,65, by=5),100), right=F)) %>%
group_by(ctagegp, posterior) %>% summarise(exp = sum(value)) %>%
filter(!is.na(ctagegp)) %>%  #Now obtain all posterior estimates to find confidence intervals
group_by(posterior) %>% mutate(exp_prop = exp / sum(exp)) %>%
group_by(ctagegp) %>% summarise(med = median(exp_prop),
lo = quantile(exp_prop, 0.025),
hi = quantile(exp_prop, 0.975))
s = seq(0,60, by=5)
ages = c(paste0(s,"-",s+4),"Over 65")
# Plot Figure 3a (proportion of exposure due to every age group)
Figure3a <-
exposure %>%
ggplot(aes(x = ctagegp, y = med, ymin = lo, ymax = hi)) +
geom_bar(stat = "identity", fill = "lightblue") +
geom_linerange(color = "Orange", lwd=1.2) +
ylab("Proportion of exposure") + xlab("Age Group") +
scale_x_discrete(labels = ages) +
theme_classic()
# Hone in on the proportion of exposure due to 0-15 year olds alone
# (with each year group in a separate bin)
exposure_fine <-
df_contacts %>%
tibble() %>%
select(-c(X, contact_serial_no)) %>%
left_join(pred_prevalence, by = "ctagegp") %>%
pivot_longer(cols = starts_with("post"), names_to = "posterior") %>%
group_by(contact_age, posterior) %>% summarise(exp = sum(value)) %>%
filter(!is.na(exp)) %>%
group_by(posterior) %>% mutate(exp_prop = exp / sum(exp)) %>%
group_by(contact_age) %>% summarise(med = median(exp_prop),
lo = quantile(exp_prop, 0.025),
hi = quantile(exp_prop, 0.975))
# Plot Figure 3b (showing the proportion of exposure due to 0-15 year olds)
Figure3b <-
exposure_fine %>%
filter(contact_age <=15) %>%
ggplot(aes(x = contact_age, y = med, ymin = lo, ymax = hi)) +
geom_bar(stat = "identity", fill = "lightblue") +
geom_linerange(color = "Orange", lwd=1.2) +
ylab("Proportion of\nexposure") + xlab("Age (years)") +
scale_x_continuous(breaks = 0:15) +
theme_classic()
Figure3 <-
Figure3a +
annotation_custom(ggplotGrob(Figure3b),
xmin = 4,
xmax = 14,
ymin = .17,
ymax = .5)
ggsave("Figures/Figure3.pdf", unit = "cm", width=20, height=12)
Figure3
